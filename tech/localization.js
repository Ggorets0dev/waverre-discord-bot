const path = require('path');

const config = require(path.join(__dirname, '..', 'config.json'));
const package = require(path.join(__dirname, '..', 'package.json'));


module.exports = {
    RUS: {
        arg_wrong_count_error: ':anger: **–ü–µ—Ä–µ–¥–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
        arg_value_error: ':anger: **–ü–µ—Ä–µ–¥–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç**',
        url_invalid_error: ':anger: **–°—Å—ã–ª–∫–∞ –ª–∏–±–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π, –ª–∏–±–æ –≤–µ–¥–µ—Ç –∫ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏, –Ω–µ –∏–º–µ—é—â–µ–π —Ç—Ä–µ–±—É–µ–º–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è**',
        long_video_create_error: `:anger: **–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏ –¥–æ ${config.max_create_duration_minutes} –º–∏–Ω—É—Ç(—ã)!**`,
        convert_error: ':anger: **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å**',
        upload_created_error: ':anger: **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ –æ–±–ª–∞–∫–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å**',
        track_index_error: ':anger: **–í–≤–µ–¥–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Ç—Ä–µ–∫–∞ –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –∑–æ–Ω—ã –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (1-[wavlib_files.length])**',
        upload_wavlib_error: ':anger: **–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å**',
        not_in_vch_error: ':anger: **–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ**',
        no_permissions_vch_error: ':anger: **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏**',
        no_audio_search_error: ':anger: **–ü–æ–∏—Å–∫ –µ—â–µ –Ω–∏ —Ä–∞–∑—É –Ω–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ—ç—Ç–æ–º—É –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**',
        storage_full_playing_error: ':anger: **–•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞ —Ö–æ—Å—Ç–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–æ, –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ –¥–æ –æ—á–∏—Å—Ç–∫–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –æ—á–µ—Ä–µ–¥–∏**',
        long_video_playing_error: `:anger: **–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏ –¥–æ ${config.max_toplay_duration_minutes} –º–∏–Ω—É—Ç(—ã)!**`,
        upload_requested_error: ':anger: **–ù–µ —É–¥–∞–µ—Ç—Å—è —Å–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å**',
        connect_playing_error: ':anger: **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –∏–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤, –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞, —Å–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω–∞**',
        empty_queue_error: ':interrobang:  **–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ–º –ø–æ –ø—Ä–∏—á–∏–Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏**',
        wrong_indexes_deliting_queue_error: ':interrobang:  **–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∞—É–¥–∏–∑–∞–ø–∏—Å–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**',
        no_audio_found_youtube_error: ':anger: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É',


        filename_changed_warning: ':warning: **–ò–º—è —Ñ–∞–π–ª–∞ –±—ã–ª–æ –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ —à–∞–±–ª–æ–Ω–Ω–æ–µ –∏–∑-–∑–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤**',
        session_restarted_vch_warning: ':warning:  **–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ. –°–µ—Å—Å–∏—è –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞**',


        query_processing_info: ':information_source: **–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É...**',
        wavlib_added_info: ' ‚ÑπÔ∏è **–î–∞–Ω–Ω—ã–π —Ç—Ä–µ–∫ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞—É–¥–∏–æ—Ç–µ–∫—É WAV**',
        upload_wavlib_info: ':clock3: –ó–∞–≥—Ä—É–∂–∞—é –Ω–∞ –æ–±–ª–∞–∫–æ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª: **[wavlib_tracks[Number(args[0])-1]].wav**',
        track_found_info: ':sparkle:  **–í—ã–±–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é –ø–æ–¥–≥—Ä—É–∑–∫—É –∞—É–¥–∏–æ...**',
        search_byname_processing_info: ':mag_right: **–ü–æ—Ö–æ–∂–µ, –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ –≤–∏–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –ø–æ–∏—Å–∫...**',
        playlist_requested_info: ':card_box:  –í—ã–±—Ä–∞–Ω –ø–ª–µ–π–ª–∏—Å—Ç **[playlist_name]**, –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å',
        track_queue_added_info: ':asterisk:  –¢—Ä–µ–∫ **[song.title]** –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å',
        already_paused_info: ':pause_button: –¢—Ä–µ–∫ **[track_title]** —É–∂–µ —Å—Ç–æ–∏—Ç –Ω–∞ –ø–∞—É–∑–µ',
        successfully_paused_info: ':pause_button: –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ **[track_title]** –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
        already_playing_info: ':arrow_forward: –¢—Ä–µ–∫ **[track_title]** —É–∂–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è',
        successfully_playing_info: ':arrow_forward: –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ **[track_title]** –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ',
        successfully_stoped_info: ' :stop_button:  **–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –æ—á–µ—Ä–µ–¥—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞**',
        successfully_loop_enabled_info: ':arrows_counterclockwise: –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –±—ã–ª–æ **–≤–∫–ª—é—á–µ–Ω–æ**',
        successfully_loop_disabled_info: ':arrows_counterclockwise: –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –±—ã–ª–æ **–≤—ã–∫–ª—é—á–µ–Ω–æ**',
        successfully_skipped_info: ':fast_forward: –¢—Ä–µ–∫ **[track_title]** –±—ã–ª–∞ –ø—Ä–æ–ø—É—â–µ–Ω',
        empty_queue_info: ':card_box:  **–ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**',
        range_deleted_queue_info: ':put_litter_in_its_place:  –ò–∑ –æ—á–µ—Ä–µ–¥–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ **[n]** –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π',
        index_deleted_queue_info: ':put_litter_in_its_place:  –ò–∑ –æ—á–µ—Ä–µ–¥–∏ —É–¥–∞–ª–µ–Ω–∞ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å —Å –Ω–æ–º–µ—Ä–æ–º **[n]**',
        leave_vch_empty_queue_info: ':zzz: **–í—ã—Ö–æ–∂—É –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏**',
        starting_track_info: ':musical_note: –í–∫–ª—é—á–∞—é —Ç—Ä–µ–∫: **[track_title]**',


        wav_created_embed: {
            title: 'ü§ü –°–æ–∑–¥–∞–Ω–∏–µ WAV',
            name: '‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω',
            value: '–§–∞–π–ª **[filename_result]** —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ –æ–±–ª–∞–∫–æ –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: [down_link]',
            footer: `‚ÑπÔ∏è –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ –æ–±–ª–∞–∫–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–æ ${config.max_wavfiles_uploaded} WAV —Ñ–∞–π–ª–æ–≤. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π, —Å—Ç–æ–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å`
        },
        wavlib_embed: {
            title: 'üßæ –ê—É–¥–∏–æ—Ç–µ–∫–∞ WAV',
            name: `‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤ (—Å—Ç—Ä [embed_inx]):`
        },
        wavlib_upload_embed: {
            title: 'ü§ü –ó–∞–≥—Ä—É–∑–∫–∞ WAV',
            name: '‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω',
            value: '–§–∞–π–ª **[track_title]** —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ –æ–±–ª–∞–∫–æ –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: [down_link]',
            footer: `‚ÑπÔ∏è –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ –æ–±–ª–∞–∫–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–æ ${config.max_wavfiles_uploaded} WAV —Ñ–∞–π–ª–æ–≤. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π, —Å—Ç–æ–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å` 
        },
        about_embed: {
            title: ':gear:  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏',
            
            settings_name: ':tools: –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
            specifications_name: ':page_facing_up: –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏',
            
            settings_value: `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–µ–π, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: **${config.max_create_duration_minutes} –º–∏–Ω**\n\n` +
                            `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–µ–π, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö: **${config.max_toplay_duration_minutes} –º–∏–Ω**\n\n` +
                            `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ WAV, —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è –Ω–∞ –æ–±–ª–∞–∫–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ: **${config.max_wavfiles_uploaded} —à—Ç**`,
            specifications_value:   `–í–µ—Ä—Å–∏—è: **${package.version}**\n\n` +
                                    '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: **NodeJS**\n\n' +
                                    `–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É–¥–∏–æ: **Tweetnacl** *(https://www.npmjs.com/package/tweetnacl)*\n\n` +
                                    '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ: **FFmpeg-static** *(https://www.npmjs.com/package/ffmpeg-static)*\n\n' +
                                    '–§–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ —Å Youtube: **Webm (audio-codec: Opus)**',

            footer: '‚ÑπÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–≤–ª—è—é—Ç—Å—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–º–∏ –∏ –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'
        },
        help_embed: {
            title: ':bookmark: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
            
            creating_name: ':hammer_pick: –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
            playing_name_1: ':headphones: –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ **(1)**',
            playing_name_2: ':headphones: –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ **(2)**',

            creating_value: '**makew** [*<quality>*] [*<url>*] - –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ WAV –∏–∑ —Ä–æ–ª–∏–∫–∞ Youtube (*quality: normal / best*)\n\n' +
                                '**libw** [*<show/inx>*] - –í—ã–≤–æ–¥ –∞—É–¥–∏–æ—Ç–µ–∫–∏ WAV (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è "show"*) –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ —Ñ–∞–π–ª–∞ –ø–æ–¥ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä*)',
            playing_value_1: '**playw (plw)** [*<url/inx/all/all_random/query>*] - –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤: –∏–∑ –∞—É–¥–∏–æ—Ç–µ–∫–∏ WAV (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä*), –∏–∑ Youtube (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞*), –≤—Å–µ—Ö WAV –ø–æ –ø–æ—Ä—è–¥–∫—É (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è "all"*), –≤—Å–µ—Ö WAV –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è "all_random"*), –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (*—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞–±–æ—Ä —Å–ª–æ–≤*)\n\n' +
                                '**pausew (paw)** - –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–æ–≤–∞–Ω–∏—è\n\n' +
                                '**resumew (rew)** - –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è\n\n' +
                                '**skipw (skw)** - –ü—Ä–æ–ø—É—Å–∫ –∏–≥—Ä–∞—é—â–µ–≥–æ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç—Ä–µ–∫–∞\n\n' +
                                '**stopw (stw)** - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –∏ –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏\n\n' +
                                '**loopw (low)** - –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ –∏–≥—Ä–∞—é—â–µ–≥–æ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç—Ä–µ–∫–∞ (–æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –≤–≤–æ–¥–æ–º –∫–æ–º–∞–Ω–¥—ã)\n\n' +
                                '**audinfw (auw)** - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–∏\n\n' + 
                                '**queuew (quw)** - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—á–µ—Ä–µ–¥–∏\n\n' +
                                '**deletew (dew)** [*<last/num>*] [*n*] - –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ *n* –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π (—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è *last* –∏ *–∫–æ–ª-–≤–æ*) –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ (—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è *num* –∏ *–Ω–æ–º–µ—Ä*)',
            playing_value_2: '**findw (fiw)** [*<query>*] - –ü–æ–∏—Å–∫ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –≤ –∞—É–¥–∏–æ—Ç–µ–∫–µ WAV –∏ –Ω–∞ Youtube\n\n' + 
                                '**choosew (chw)** [*<inx>*] - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–∞ –ø–æ–¥ —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –∏–∑ –±–∞–∑—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ *findw*)',
        },
        audinf_embed: {
            title: ':headphones:  –ê—É–¥–∏–æ–ø–ª–µ–µ—Ä',

            loop_name: ':arrows_counterclockwise:  –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ',
            loop_enabled_value: '–°—Ç–∞—Ç—É—Å: **–í–∫–ª—é—á–µ–Ω–æ**',
            loop_disabled_value: '–°—Ç–∞—Ç—É—Å: **–í—ã–∫–ª—é—á–µ–Ω–æ**',

            playing_name: ':eight_spoked_asterisk:  –ò–≥—Ä–∞–µ—Ç',
            paused_name: ':pause_button:  –ü–∞—É–∑–∞',
            audio_value: '–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å: **[track_title]**',
            
            track_adress_name: ':mailbox:  –ê–¥—Ä–µ—Å —Ç—Ä–µ–∫–∞',
            track_adress_value: '–†–µ—Å—É—Ä—Å: **[track_adress]**'
        },
        queue_embed: {
            title: ':card_box:  –û—á–µ—Ä–µ–¥—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è',
            name: '‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏ (—Å—Ç—Ä [embed_inx]):'
        },
        find_embed: {
            title: ':mag_right:  –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏',

            wavlib_name: ':card_box: **–ê—É–¥–∏–æ—Ç–µ–∫–∞ WAV**',
            youtube_name: ':globe_with_meridians:  **Youtube**',

            footer: '‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ >choosew (chw) [n] –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–º–µ—Ä–∞ —Ç—Ä–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å'
        }
    },

    ENG: {
        arg_wrong_count_error: ':anger: **Wrong number of arguments sent**',
        arg_value_error: ':anger: **Incorrect argument is sent**',
        url_invalid_error: ':anger: **Link is either incorrect or leads to a video that does not have the required download format**',
        long_video_create_error: `:anger: **Video duration is too long, only videos up to ${config.max_create_duration_minutes} minutes!**`,
        convert_error: ':anger: **Error occurred during conversion, please try again later or choose another video**',
        upload_created_error: ':anger: **Error occurred while uploading the file to the cloud, please try again later or choose another video**',
        track_index_error: ':anger: **Entered track index falls out of the zone of valid values (1-[wavlib_files.length])**',
        upload_wavlib_error: ':anger: **Audio file could not be uploaded, please repeat your request later or select another one**',
        not_in_vch_error: ':anger: **You must be in a voice channel**',
        no_permissions_vch_error: ':anger: **Not enough permissions on this server to play music**',
        no_audio_search_error: ':anger: **Search has never been done, so there are no available options to add to the queue**',
        storage_full_playing_error: ':anger: **Storage on host is full, audio cannot be downloaded until some queue is cleared**',
        long_video_playing_error: `:anger: **Video duration is too long, only videos up to ${config.max_toplay_duration_minutes} minutes!**`,
        upload_requested_error: ':anger: **Cannot download this video for later playback, repeat your request later or select another video**',
        connect_playing_error: ':anger: **Error occurred while connecting to the voice channel or playing audio files, queue cleared, session deleted**',
        empty_queue_error: ':interrobang:  **Cannot work with playback because there are no tracks in the queue**',
        wrong_indexes_deliting_queue_error: ':interrobang:  **Failed to delete the specified recordings, check the specified value**',
        no_audio_found_youtube_error: ':anger: No tracks for this query were found',


        filename_changed_warning: ':warning: **File name was changed to a template name because of invalid characters**',
        session_restarted_vch_warning: ':warning:  **Cannot access the voice channel to which the connection was originally created. The session was restarted**',


        query_processing_info: ':information_source: **Request accepted for processing...**',
        wavlib_added_info: ' ‚ÑπÔ∏è **This track was added to the WAV audio library**',
        upload_wavlib_info: ':clock3: Uploading the requested audio file to the cloud: **[wavlib_tracks[Number(args[0])-1]].wav**',
        track_found_info: ':sparkle:  **Choice confirmed, downloading audio...**',
        search_byname_processing_info: ':mag_right: **Looks like the query is in title form, searching...**',
        playlist_requested_info: ':card_box:  Playlist **[playlist_name]** is selected, audio recordings are added to the queue',
        track_queue_added_info: ':asterisk:  Track **[song.title]** was added to queue',
        already_paused_info: ':pause_button: Track **[track_title]** is already paused',
        successfully_paused_info: ':pause_button: Track **[track_title]** is paused',
        already_playing_info: ':arrow_forward: Track **[track_title]** is already playing',
        successfully_playing_info: ':arrow_forward: Track playback **[track_title]** has been resumed',
        successfully_stoped_info: ' :stop_button:  **Track playback stopped, queue completely cleared**',
        successfully_loop_enabled_info: ':arrows_counterclockwise: Track looping has been **enabled**',
        successfully_loop_disabled_info: ':arrows_counterclockwise: Track looping has been **disabled**',
        successfully_skipped_info: ':fast_forward: Track **[track_title]** has been skipped',
        empty_queue_info: ':card_box:  **There are no tracks in the queue**',
        range_deleted_queue_info: ':put_litter_in_its_place:  Last **[n]** tracks were removed from the queue',
        index_deleted_queue_info: ':put_litter_in_its_place:  Track with the **[n]** index was removed from queue',
        leave_vch_empty_queue_info: ':zzz: **Quitting the voice channel due to lack of tracks in the queue**',
        starting_track_info: ':musical_note: Playing track: **[track_title]**',


        wav_created_embed: {
            title: 'ü§ü WAV creation',
            name: '‚úÖ File uploaded',
            value: 'File **[filename_result]** has been successfully uploaded to the cloud and is available via link: [down_link]',
            footer: `‚ÑπÔ∏è Up to ${config.max_wavfiles_uploaded} WAV files can be stored on the cloud at one time. If the link is invalid, it is worth repeating the request`
        },
        wavlib_embed: {
            title: 'üßæ WAV audio library',
            name: `‚ÑπÔ∏è List of available tracks (p. [page_inx]):`
        },
        wavlib_upload_embed: {
            title: 'ü§ü WAV uploading',
            name: '‚úÖ File uploaded',
            value: 'File **[track_title]** has been successfully uploaded to the cloud and is available via link: [down_link]',
            footer: `‚ÑπÔ∏è Up to ${config.max_wavfiles_uploaded} WAV files can be stored on the cloud at one time. If the link is invalid, it is worth repeating the request`
        },
        about_embed: {
            title: ':gear: Settings and Specifications',
            
            settings_name: ':tools: Settings',
            specifications_name: ':page_facing_up: Specifications',
            
            settings_value: `Maximum duration of videos available for conversion: **${config.max_create_duration_minutes} minutes**\n\n` +
                            `Maximum duration of video recordings available for playback in voice channels: **${config.max_toplay_duration_minutes} minutes**\n\n` +
                            `Maximum number of WAV files stored in the cloud at one time: **${config.max_wavfiles_uploaded} pcs**`,
            specifications_value:   `Version: **${package.version}**\n\n` +
                                    'Platform: **NodeJS**\n\n' +
                                    `Audio encoding library: **Tweetnacl** *(https://www.npmjs.com/package/tweetnacl)*\n\n` +
                                    'Audio playback tool: **FFmpeg-static** *(https://www.npmjs.com/package/ffmpeg-static)*',

            footer: '‚ÑπÔ∏è Settings are constant and cannot be changed by users'
        },
        help_embed: {
            title: ':bookmark: Documentation',
            
            creating_name: ':hammer_pick: Creation and management',
            playing_name_1: ':headphones: Playing **(1)**',
            playing_name_2: ':headphones: Playing **(2)**',

            creating_value: '**makew** [*<quality>*] [*<url>*] - Creating a WAV file from a Youtube video (*quality: normal / best*)\n\n' +
                                '**libw** [*<show/inx>*] - Output a WAV audio library (*specified "show"*) or upload to the cloud a file under the specified index (*specified number*)',
            playing_value_1: '**playw (plw)** [*<url/inx/all/all_random/query>*] - Playback of audio files: from WAV audio library (*specified number*), from Youtube (*specified link*), all WAV in order (*specified "all"*), all WAV in random order (*specified "all_random"*), by keywords (*specified word set*)\n\n' +
                                '**pausew (paw)** - Pause playback\n\n' +
                                '**resumew (rew)** - Resume playback\n\n' +
                                '**skipw (skw)** - Skipping the currently playing track\n\n' +
                                '**stopw (stw)** - Stopping playback and completely clearing the queue\n\n' +
                                '**loopw (low)** - Track currently playing loops (can be disabled by entering the command again)\n\n' +
                                '**audinfw (auw)** - Playback information\n\n' + 
                                '**queuew (quw)** - Show the queue\n\n' +
                                '**deletew (dew)** [*<last/num>*] [*n*] - Deleting *n* last audio tracks from the queue (specifying *last* and *number*) or deleting one specific track (specifying *num* and *number*)',
            playing_value_2: '**findw (fiw)** [*<query>*] - Searching for audio in the WAV audio library and on Youtube\n\n' + 
                                '**choosew (chw)** [*<inx>*] - Adding a track to the queue with the specified number from the database of found audio recordings (available only after calling *findw*)',
        },
        audinf_embed: {
            title: ':headphones:  Audio player',

            loop_name: ':arrows_counterclockwise:  Loop',
            loop_enabled_value: 'Status: **Enabled**',
            loop_disabled_value: 'Status: **Disabled**',

            playing_name: ':eight_spoked_asterisk:  Playing',
            paused_name: ':pause_button:  Paused',
            audio_value: 'Audio: **[track_title]**',
            
            track_adress_name: ':mailbox:  Track adress',
            track_adress_value: 'Resource: **[track_adress]**'
        },
        queue_embed: {
            title: ':card_box:  Playback queue',
            name: '‚ÑπÔ∏è List of tracks in the queue (p. [embed_inx]):'
        },
        find_embed: {
            title: ':mag_right:  Music search',

            wavlib_name: ':card_box: **WAV audio library**',
            youtube_name: ':globe_with_meridians:  **Youtube**',

            footer: '‚ÑπÔ∏è Use >choosew (chw) [n] to select the track number to be added to the queue'
        }
    },

    CheckEquivalence() {
        let [example_locale_mess_count, example_locale_mess_texts] = [0, []];
        let [current_locale_mess_count, current_locale_mess_texts] = [0, []];
        
        for (locale in this) {
            if (typeof this[locale] != 'object') continue;
            
            current_locale_mess_count = 0;
            current_locale_mess_texts = [];
            
            for (mess in this[locale]) {
                current_locale_mess_count += 1;
                current_locale_mess_texts.push(mess);
            }

            if (example_locale_mess_count == 0) {
                example_locale_mess_count = current_locale_mess_count;
                example_locale_mess_texts = current_locale_mess_texts
            }
            else if (current_locale_mess_count != example_locale_mess_count || !example_locale_mess_texts.every(function(element, index) { return element === current_locale_mess_texts[index]; })) return false;
        }
        return true;
    }
}